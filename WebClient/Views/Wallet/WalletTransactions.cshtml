@model WalletTransactionsVM

<div class="container">
    <h1>Get wallet transactions</h1>
    <div class="row">
        <div class="col-md-4">
            <form asp-action="WalletTransactions" asp-controller="Wallet" method="post">
                <div class="form-group">
                    <label class="control-label" asp-for="WalletTransactionsRequestVM.JMBG">Jmbg:</label>
                    <input class="form-control" asp-for="WalletTransactionsRequestVM.JMBG" />
                    <span asp-validation-for="WalletTransactionsRequestVM.JMBG" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label class="control-label" asp-for="WalletTransactionsRequestVM.PASS">Password:</label>
                    <input type="password" class="form-control" asp-for="WalletTransactionsRequestVM.PASS" autocomplete="off" />
                    <span asp-validation-for="WalletTransactionsRequestVM.PASS" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label class="control-label" asp-for="WalletTransactionsRequestVM.Date">Date:</label>
                    <input type="date" class="form-control" asp-for="WalletTransactionsRequestVM.Date" autocomplete="off" />
                    <span asp-validation-for="WalletTransactionsRequestVM.Date" class="text-danger"></span>
                </div>

                <input type="submit" value="Confirm" class="btn btn-primary" />
            </form>
        </div>
    </div>
    <hr />

    @if (Model != null && Model.WalletTransactionsResponseVM != null)
    {
    <table class="table">
        <tr>
            <th>
                @Html.DisplayName("Transaction Id")
            </th>
            <th>
                @Html.DisplayName("Transaction amount")
            </th>
            <th>
                @Html.DisplayName("Transaction type")
            </th>
        </tr>

    
        @if (Model.WalletTransactionsResponseVM.TransactionVMs != null)
        {
            @foreach (var item in Model.WalletTransactionsResponseVM.TransactionVMs)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AmountString)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Type)
                    </td>
                </tr>
            }
        }
    </table>
    }
</div>

<div class="modal fade" id="modalCenter" role="dialog">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalTitle"></h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modalContent">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="~/js/helper.js"></script>
    @if (ViewData["Success"] != null && ViewData["Success"].ToString() == "False")
    {
        <script type="text/javascript">ShowMessage('@ViewData["Success"].ToString()', '', '@(ViewData["ErrorMessage"] == null ? "" : ViewData["ErrorMessage"])');</script>
    }
}

